from ctypes import sizeof
print("hello World Welcome To Sets") 
A = set([])
no = int(input("Enter The Total Number In Set A: "))
for i in range(no):
    m = int(input("Enter Element: "))
    A.add(m)

B = set([])
no = int(input("Enter The Total Number In Set B: "))
for i in range(no):
    m = int(input("Enter Element: "))
    B.add(m)

print("Set A:", A)
print("Set B:", B)

while True:
    print("\n\n\n ***** MENU ****** \n")
    print("1 : Union")
    print("2 : Intersection")
    print("3 : Set Difference")
    print("4 : Subset")
    print("5 : Is Empty")
    print("6 : Len of A")
    print("7 : Len of B")
    print("8 : Size of A and B")
    print("9 : Searching")
    print("10: Add Element")
    print("11: Remove Element")
    print("12: isContains")
    print("\n\n")

    ch = int(input("\n***** Enter your Choice ****** \n"))

    if ch == 1:
        print("\nUnion of A and B:", A.union(B))

    if ch == 2:
        print("\nIntersection of A and B:", A.intersection(B))

    if ch == 3:
        print("\nSet difference A-B:", A - B)

    if ch == 4:
        if A.issubset(B):
            print("\nIs subset")
        else:
            print("\nNot a subset")

    if ch == 5:
        if len(A) == 0:
            print("\nSet A is Empty")
        else:
            print("\nSet A is not empty")

    if ch == 6:
        print("Len A =", len(A))

    if ch == 7:
        print("Len B =", len(B))

    if ch == 8:
        print("\nSize of A is:", sizeof(A))
        print("\nSize of B is:", sizeof(B))

    if ch == 9:
        num = int(input("\nEnter Element to Be Searched: "))
        if num in A:
            print("\nNumber is Found In Set A")
        elif num in B:
            print("\nNumber Is Found In Set B")
        else:
            print("\nSorry! Number Not Found")

    if ch == 10:
        ad = int(input("Enter Number To be Added In Set A: "))
        A.add(ad)
        print("\nNumber Added In Set A")
        print("\nUpdated Set:", A)

    if ch == 11:
        rm = int(input("Enter Number To Delete: "))
        A.remove(rm)
        print("\nNumber Removed")
        print("\nUpdated Set:", A)


























#SETS:
 #Sets are a type of abstract data type that allows you to store a list of non-#repeated values. Their name derives from the mathematical concept of finite #sets. Unlike an array, sets are unordered and unindexed. You can think about #sets as a room full of people you know. They can move around the room, changing #order, without altering the set of people in that room. Plus, there are no #duplicate people (unless you know someone who has cloned themselves). These are #the two properties of a set: the data is unordered and it is not duplicated. #Sets have the most impact in mathematical set theory. These theories are used #in many kinds of proofs, structures, and abstract algebra. Creating relations #from different sets and codomains are also an important applications of sets. #In computer science, set theory is useful if you need to collect data and do #not care about their multiplcity or their order. As we've seen on this page, #hash tables and sets are very related. In databases, especially for relational #databases, sets are very useful. There are many commands that finds unions, #intersections, and differences of different tables and sets of data.

#The set has four basic operations.
 #Function Name* Provided Functionality 
#insert(i) Adds i to the set 
#remove(i) Removes i from the set
 #size() Returns the size of the set 
#contains(i) Returns whether or not the set contains i
