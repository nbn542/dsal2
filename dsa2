From ctypes import sizeof
Print (“ hello World Welcome To Sets “) 
A = set([])
No = int(input(“ Enter The Total Number In Set A “))
For I in range(no):
    M = int(input(“ Enter Elements “):
    a.add(m);
B = set([])
No = int(input(“ Enter The Total Number In Set B “))
For I in range(no):
    M = int(input(“ Enter Elements “))
    b.add(m);
Print(“ Set A : “,a)
Print(“ Set B : “,b)
While 1:
    Print(“\n\n\n *****  MENU ****** \n”)
    Print(“1 : Union”)
    Print(“2 : Intersection”)
    Print(“3 : Set Difference”)
    Print(“4 : Subset”)
    Print(“5 : Is Empty”)
    Print(“6 : Len of A”)
    Print(“7 : Len of B”)
    Print(“8 : size of A and B “)
    Print(“9 : searching “)
    Print(“10: add Element “)
    Print(“11: Remove Element”)
    # print(“12: isContains “)
    # print(“ \n\n “)
    Ch=int(input(“\n***** Enter your Choice ****** \n”))
    If ch==1:
        Print(“\n Union of A and B as”,a.union(b))
    If ch==2:
        Print(“ \n Intersection of A and B”,a.intersection(b))
    If ch==3:
        Print(“\n Set difference A-B as”,a-b)
    If ch==4:
        If a.issubset(b):
            Print(“\nIs subset”)
        Else:
            Print(“\n Not a subset”)
    If ch==5:
        If len(a)==0:
            Print(“\n Set A is Empty”)
        Else:
            Print(“\n Set A is not empty”)
    If ch==6:
        Print(“Len A=”,len(a))
    If ch==7:
        Print(“Len B=”,len(b))
    If ch== 8 :
        Print(“\n size of a is :”,sizeof(a)) 
        Print(“\n size of a is :”,sizeof(b)) 
    If ch== 9 :
        Num = int(input(“ \n Enter Element to Be Searched “))
        If num in a :
            Print(“ \n Number is Found In Set A  “)
        Elif num in b:
            Print(“ \n Number Is Found In Set B  “)
        Else :
            Print(“\n\n Sorry ! Number Not Found “)
    If ch==10 :
        Ad = int(input(“ Enter Number To be Added In Set  A “))
        a.add(ad)
        Print(“ \n number Added In Set A “)
        Print(“\n  Updated Set :  “,a)
    If ch==11 :
        Rm = int(input(“ Enter Numbber To Delete “))
        a.remove(rm)
        Print(“\n  Number Removed “)
        Print(“ \n  updated Set Set “ , a)


























#SETS:
 #Sets are a type of abstract data type that allows you to store a list of non-#repeated values. Their name derives from the mathematical concept of finite #sets. Unlike an array, sets are unordered and unindexed. You can think about #sets as a room full of people you know. They can move around the room, changing #order, without altering the set of people in that room. Plus, there are no #duplicate people (unless you know someone who has cloned themselves). These are #the two properties of a set: the data is unordered and it is not duplicated. #Sets have the most impact in mathematical set theory. These theories are used #in many kinds of proofs, structures, and abstract algebra. Creating relations #from different sets and codomains are also an important applications of sets. #In computer science, set theory is useful if you need to collect data and do #not care about their multiplcity or their order. As we've seen on this page, #hash tables and sets are very related. In databases, especially for relational #databases, sets are very useful. There are many commands that finds unions, #intersections, and differences of different tables and sets of data.

#The set has four basic operations.
 #Function Name* Provided Functionality 
#insert(i) Adds i to the set 
#remove(i) Removes i from the set
 #size() Returns the size of the set 
#contains(i) Returns whether or not the set contains i
